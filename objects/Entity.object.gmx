<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Selectable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();  // yes

methods_entity(methods);

location_flag=LocationFlags.object;

model=Models.none;
model_index=0;
mask=COLLISION_PRIMARY_DEFAULT;

owner=NPCs.GenericInteractionMarker;
music=AudioGroups.none;
//script=Cutscenes.no;
script=0;
text_speed_modifier=0;

data_script=data_script_entity;
interact_script=interact_character;
render_script=draw_model;
item_overlay_script=null;
image=NPCImages.Dragon;
save_script=save_entity;
load_script=load_entity;
land_script=land_null;
end_stun_script=null;
on_hit=HitScripts.none;

editor_state=Editor.def;
editor_page=GameModes.edit_object;

xrotspeed=0;
yrotspeed=0;
zrotspeed=0;
xspeed=0;
yspeed=0;
zspeed=0;
direction_fix=true;    // every instance has this though it's mainly used for NPCs
gravity_force=false;
scale=1;    // this is here for draw_set_transform_stack, it uses it, but it shouldn't be set for Models because the collision meshes can't scale
personal_friction=0;
grounded=false;

stun_speed=10000;

down_vector=array_create_3(0, 0, -1);   // normally this doesn't change but some things can walk on walls

xrottarget=-1;
yrottarget=-1;
zrottarget=-1;

free=true;

dzrot=0;
pitch=0;
height=25;

movement_state=MovementStates.walking;
persistant_movement_state=MovementStates.walking;
below=noone;
below_location_flag=LocationFlags.no;
horizontal_collision_script=hcs_entity;

zstart=0;
// xstart and ystart are automatically handled by Game Maker

air_distance=0;
air_speed=0;

trainer_id=irandom(SHORT-1);

frame=0;
is_animating=false;

name='';
friendship=0;

etype=ETypes.entity;
active=false;

target=noone;
move_target=noone;

movement_script=null;
animation_t=-1;
automove=true;  // if this is false you will need to manually update
                // the x, y, z position in the movement script because
                // movement() will be disabled

following=noone;

soaring=false;

legilimens_text=Legilimens.none;
on_death=DeathScripts.regular;

loot_package=BASE_ASSET;
loot=0;
loot_quantity=1;
loot_flag=BooleanFlags.unlocked;

// Classes

//class=Classes.BirdCasting;
class=Classes.BirdFlying;
spell=CombatTypes.electric;

// Combat stuff

aggro_level=Aggro.friendly;
can_die=true;
// aggro_target=noone; // defined in Selectable because Events also check them
charge_level=0;    // Seconds of charge
charge_level_d=0;  // Rate of change
combat_music_package=BASE_ASSET;
combat_music=0;
death_cutscene=get_cutscene_from_name("On Death", 0);
combat_state=Misc.begin_combat;

hit_flags=HIT_FRONT|HIT_BACK|HIT_LEFT|HIT_RIGHT;    // Directions from which you can be hit
hit_flag_stun=true; // Whether or not you can be stunned by being hit from an invalid direction
hit_flag_stun_time=1;   // How long the stun time is in effect

timer_hit_stun=-1;

// Please stop deleting this. Yes, it is needed.
can_bleedout=false;
bleedout=false;
// If can_bleedout is set to False this will never be called.
bleedout_cutscene=get_cutscene_from_name("On Bleedout", 0);
bleedout_reset_aggro=true;

var cls=get_class();
exp_hp=0;
exp_mp=0;

var hp_max=get_max_hp(exp_hp);
hp_current=hp_max;
hp_growth=0;

var magic_max=get_max_mp(exp_mp);
mp_current=magic_max;

// Because crates and barrels HAVE to have weapons and armor @_@
equip_weapon_package=BASE_ASSET;
equip_weapon=0;
equip_shield_package=BASE_ASSET;
equip_shield=0;
handedness=Misc.right;

timer_invincibility=-1;
timer_revelation=-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

destroy_cutscene_variables();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move and recover HP, and other stuff

if (movement_free()){
    if (--timer_hit_stun&lt;0){
        script_execute(movement_script);
        
        if (automove&amp;&amp;!locked&amp;&amp;(instance_exists(Player))){
            MOVEMENT();
        }
        
        if (timer_hit_stun==-1){
            script_execute(end_stun_script);
        }
    }
    
//    var class=get_class();
//    if (hp_current&gt;0){

/*    if (true){
        hp_current=min(get_max_hp(exp_hp), hp_current+class.hp_recovery_rate*World.delta_time_seconds);
        hp_visible=lerp(hp_visible, hp_current, 2*World.delta_time_seconds);
    }*/
    
//    mp_current=min(get_max_mp(exp_mp), mp_current+class.magic_recovery_rate*World.delta_time_seconds);
    
/*    if (round(hp_visible)==0){
        DIE(noone, DeathTypes.death_other);
    }*/
    if (--timer_invincibility==-1){
        // you're not incincible anymore
        // @todo some kind of graphic?
    }
    if (--timer_revelation==-1){
        // Revelation is a global effect summoned by a single entity (probably the player)
        // so revert them all to "hidden" state
        with (Entity){
            if (hidden){
                mask=COLLISION_DONT_MESS_WITH_ME;
                c_object_set_mask(object, mask, mask);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// zprevious

zprevious=z;
z=max(z, -1024);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
